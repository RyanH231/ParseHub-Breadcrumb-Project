{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanh\\\\OneDrive\\\\Documents\\\\Da Bae\\\\Web Development\\\\Parse Hub Breadcrumb Project\\\\react\\\\breadcrumb\\\\src\\\\components\\\\getcontents.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport Breadcrumb from './breadcrumb';\nimport Path from './path';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetContents() {\n  _s();\n  let location = useLocation();\n  let isFile = true;\n  const [path, setPath] = useState([]);\n  const [fileContents, setFileContents] = useState([]);\n  const [fileDescription, setFileDescription] = useState(\"\");\n  const [fileFlag, setFileFlag] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/api\" + location.pathname).then(response => response.json()).then(data => {\n      if (data.contents === undefined) {\n        setFileContents([]);\n      } else if (data.currentElement === 'dir') {\n        setFileContents(data.contents);\n        setFileFlag(false);\n      } else if (data.currentElement === 'file') {\n        setFileDescription(data.contents);\n        setFileFlag(true);\n      }\n      setPath(data.breadcrumbPath);\n      setCurrentLocation(location.pathname);\n    });\n  }, [location]);\n  if (fileFlag) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [path.map((_, index) => /*#__PURE__*/_jsxDEV(Path, {\n        path: path,\n        index: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", fileDescription]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [path.map((_, index) => /*#__PURE__*/_jsxDEV(Path, {\n        path: path,\n        index: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)), fileContents.map((file, index) => /*#__PURE__*/_jsxDEV(Breadcrumb, {\n        content: file,\n        location: currentLocation\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(GetContents, \"xfdzVrHrz6SAdfERs1f0rlXrrzU=\", false, function () {\n  return [useLocation];\n});\n_c = GetContents;\nvar _c;\n$RefreshReg$(_c, \"GetContents\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","Breadcrumb","Path","GetContents","location","isFile","path","setPath","fileContents","setFileContents","fileDescription","setFileDescription","fileFlag","setFileFlag","currentLocation","setCurrentLocation","fetch","pathname","then","response","json","data","contents","undefined","currentElement","breadcrumbPath","map","_","index","file"],"sources":["C:/Users/ryanh/OneDrive/Documents/Da Bae/Web Development/Parse Hub Breadcrumb Project/react/breadcrumb/src/components/getcontents.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {useLocation} from \"react-router-dom\";\r\nimport Breadcrumb from './breadcrumb';\r\nimport Path from './path';\r\n\r\nexport default function GetContents() {\r\n    let location = useLocation();\r\n    let isFile = true;\r\n\r\n    const [path, setPath] = useState([]);\r\n    const [fileContents, setFileContents] = useState([]);\r\n    const [fileDescription, setFileDescription] = useState(\"\");\r\n    const [fileFlag, setFileFlag] = useState(false);\r\n    const [currentLocation, setCurrentLocation] = useState(\"\");\r\n    \r\n    useEffect(()=>\r\n    {\r\n        fetch(\"/api\" + location.pathname).then(response => response.json()).then(data => {\r\n            if(data.contents === undefined)\r\n            {\r\n                setFileContents([]);\r\n            }\r\n            else if(data.currentElement === 'dir')\r\n            {\r\n                setFileContents(data.contents);\r\n                setFileFlag(false);\r\n            }\r\n            else if(data.currentElement === 'file')\r\n            {\r\n                setFileDescription(data.contents);\r\n                setFileFlag(true);\r\n            }\r\n            setPath(data.breadcrumbPath);\r\n            setCurrentLocation(location.pathname);\r\n        })        \r\n    }, [location])\r\n\r\n\r\n    if(fileFlag)\r\n    {\r\n        return(<div>\r\n            {path.map((_, index) => \r\n                    <Path key = {index} path = {path} index={index}/>\r\n                )}\r\n            <h1> {fileDescription}</h1>\r\n            </div>\r\n        )\r\n    }\r\n    else\r\n    {\r\n        \r\n        return (\r\n            <div>\r\n                {path.map((_, index) => \r\n                    <Path key = {index} path = {path} index={index}/>\r\n                )}\r\n                {fileContents.map((file, index) => \r\n                    <Breadcrumb key= {index} content = {file} location = {currentLocation}/>\r\n                )}\r\n            </div>);\r\n    }\r\n\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,eAAe,SAASC,WAAW,GAAG;EAAA;EAClC,IAAIC,QAAQ,GAAGJ,WAAW,EAAE;EAC5B,IAAIK,MAAM,GAAG,IAAI;EAEjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE1DD,SAAS,CAAC,MACV;IACIkB,KAAK,CAAC,MAAM,GAAGZ,QAAQ,CAACa,QAAQ,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAACG,IAAI,IAAI;MAC7E,IAAGA,IAAI,CAACC,QAAQ,KAAKC,SAAS,EAC9B;QACId,eAAe,CAAC,EAAE,CAAC;MACvB,CAAC,MACI,IAAGY,IAAI,CAACG,cAAc,KAAK,KAAK,EACrC;QACIf,eAAe,CAACY,IAAI,CAACC,QAAQ,CAAC;QAC9BT,WAAW,CAAC,KAAK,CAAC;MACtB,CAAC,MACI,IAAGQ,IAAI,CAACG,cAAc,KAAK,MAAM,EACtC;QACIb,kBAAkB,CAACU,IAAI,CAACC,QAAQ,CAAC;QACjCT,WAAW,CAAC,IAAI,CAAC;MACrB;MACAN,OAAO,CAACc,IAAI,CAACI,cAAc,CAAC;MAC5BV,kBAAkB,CAACX,QAAQ,CAACa,QAAQ,CAAC;IACzC,CAAC,CAAC;EACN,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;EAGd,IAAGQ,QAAQ,EACX;IACI,oBAAO;MAAA,WACFN,IAAI,CAACoB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACX,QAAC,IAAI;QAAe,IAAI,EAAItB,IAAK;QAAC,KAAK,EAAEsB;MAAM,GAAlCA,KAAK;QAAA;QAAA;QAAA;MAAA,QAA+B,CACpD,eACL;QAAA,gBAAMlB,eAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACrB;EAEd,CAAC,MAED;IAEI,oBACI;MAAA,WACKJ,IAAI,CAACoB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACf,QAAC,IAAI;QAAe,IAAI,EAAItB,IAAK;QAAC,KAAK,EAAEsB;MAAM,GAAlCA,KAAK;QAAA;QAAA;QAAA;MAAA,QAA+B,CACpD,EACApB,YAAY,CAACkB,GAAG,CAAC,CAACG,IAAI,EAAED,KAAK,kBAC1B,QAAC,UAAU;QAAc,OAAO,EAAIC,IAAK;QAAC,QAAQ,EAAIf;MAAgB,GAApDc,KAAK;QAAA;QAAA;QAAA;MAAA,QAAiD,CAC3E;IAAA;MAAA;MAAA;MAAA;IAAA,QACC;EACd;AAEJ;AAAC,GAzDuBzB,WAAW;EAAA,QAChBH,WAAW;AAAA;AAAA,KADNG,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}